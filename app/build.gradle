plugins {
    id "com.android.application"
    id "kotlin-android"
    alias libs.plugins.ksp
    alias libs.plugins.kotlin.serialization
}

ext {
    supportedLocales = ['en', 'ru']
    resToLoc = { res -> res.replaceAll(/-r/, '-').replaceAll(/^b\+/, '').replaceAll(/\+/, '-') }
}

android {
    compileSdk 34
    buildToolsVersion = "30.0.3"

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        applicationId "lab.maxb.dark"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 4
        versionName "0.4.0"

        // URL for main API
        buildConfigField "String", "DARK_API_URL", keystoreProperties["DARK_API_URL"]
        // URL for code repository
        buildConfigField "String", "APP_REPOSITORY", keystoreProperties["APP_REPOSITORY"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += supportedLocales
        buildConfigField "String[]", "LOCALES", '{"' +
                supportedLocales.collect { resToLoc(it) }.join('","') + '"}'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation":"$projectDir/schemas".toString(),
                    "room.incremental":"true"
                ]
            }
        }
    }

    buildFeatures{
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    kotlin {
        jvmToolchain(11)
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-Xcontext-receivers"
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "DarkApp.apk"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'lab.maxb.dark.ui.app'
}

dependencies {
    implementation project(path: ':core:domain')
    implementation project(path: ':core:data')
    implementation project(path: ':core:ui')
    implementation project(path: ':feature:articles:ui')
    implementation project(path: ':feature:welcome:ui')
    implementation project(path: ':feature:navigation:impl')
    implementation project(path: ':feature:settings:ui')
    implementation project(path: ':feature:auth:ui')
    implementation project(path: ':feature:tasks:ui:add')
    implementation project(path: ':feature:tasks:ui:solve')
    implementation project(path: ':feature:tasks:ui:list')
    implementation project(path: ':feature:navigation-drawer:ui')

    // Dependency Injection
    implementation libs.koin.bom
    implementation libs.koin.android
    implementation libs.koin.compose
    implementation libs.koin.annotations
    ksp libs.koin.ksp

    // Coroutines
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime
    implementation libs.coroutines.core
    implementation libs.coroutines.android

    // Serialization
    implementation libs.kotlinx.serialization.json

    // Datastore
    implementation libs.datastore.preferences
    implementation libs.datastore.encrypted

    // Room persistence
    implementation libs.room.runtime
    implementation libs.room.ktx
    ksp libs.room.ksp
    implementation libs.room.paging

    // JC Dialogs
    implementation libs.material.dialogs

    // JC Settings
    implementation libs.compose.settings

    // Paging
    implementation libs.paging.runtime
    implementation libs.paging.compose

    // Retrofit2 Networking
    implementation libs.retrofit.core
    implementation libs.retrofit.converter.gson
    implementation libs.gson
    implementation libs.logging.interceptor

    // JC Navigation
    implementation libs.compose.destinations.core

    // Android X/KTX
    implementation libs.androidx.core
    implementation libs.androidx.appcompat

    // Scalable layout units
    implementation libs.scalable.dp
    implementation libs.scalable.sp

    // Desugaring (Time-related features support for API 21+)
    coreLibraryDesugaring libs.desugaring

    // Images with Coil by landscapist JC version
    implementation libs.landscapist.coil
    implementation libs.landscapist.animation

    // Compose
    implementation platform(libs.compose.bom)
    implementation libs.compose.runtime
    implementation libs.compose.ui.core
    implementation libs.compose.ui.util
    implementation libs.compose.ui.tooling
    implementation libs.compose.foundation.core
    implementation libs.compose.foundation.layout
    implementation libs.androidx.activity.compose
    implementation libs.compose.theme.adapter
    implementation libs.compose.material3
    implementation libs.compose.animation
    implementation libs.lifecycle.viewmodel.compose

    // JC Accompanist
    implementation libs.accompanist.pager.indicators
    implementation libs.accompanist.adaptive

    // Tests
    testImplementation libs.junit.core
    testImplementation libs.junit.jupiter.api
        // Koin
        testImplementation libs.koin.test.core
        testImplementation libs.koin.test.junit5
        // JetpackCompose UI Tests
        androidTestImplementation platform(libs.compose.bom)
        androidTestImplementation libs.compose.ui.test
}