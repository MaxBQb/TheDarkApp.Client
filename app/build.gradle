plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'com.google.devtools.ksp' version "1.8.21-1.0.11"
    id 'org.jetbrains.kotlin.plugin.serialization'
}

ext {
    supportedLocales = ['en', 'ru']
    resToLoc = { res -> res.replaceAll(/-r/, '-').replaceAll(/^b\+/, '').replaceAll(/\+/, '-') }
}

android {
    compileSdk 33
    buildToolsVersion = "30.0.3"

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        applicationId "lab.maxb.dark"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 4
        versionName "0.4.0"

        // URL for main API
        buildConfigField "String", "DARK_API_URL", keystoreProperties["DARK_API_URL"]
        // URL for code repository
        buildConfigField "String", "APP_REPOSITORY", keystoreProperties["APP_REPOSITORY"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += supportedLocales
        buildConfigField "String[]", "LOCALES", '{"' +
                supportedLocales.collect { resToLoc(it) }.join('","') + '"}'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation":"$projectDir/schemas".toString(),
                    "room.incremental":"true"
                ]
            }
        }
    }

    buildFeatures{
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
    kotlin {
        jvmToolchain(11)
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-Xcontext-receivers"
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "DarkApp.apk"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'lab.maxb.dark'
}

dependencies {
    // Dependency Injection
    def koin_annotations_version = '1.0.1'
    def koin_version = '3.5.1'
    implementation "io.insert-koin:koin-bom:$koin_version"
    implementation "io.insert-koin:koin-android"
    implementation "io.insert-koin:koin-androidx-compose"
    implementation "io.insert-koin:koin-annotations:$koin_annotations_version"
    ksp "io.insert-koin:koin-ksp-compiler:$koin_annotations_version"

    // Coroutines
    def coroutines_version = '1.7.1'
    def lifecycle_version = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'

    // Datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation("io.github.osipxd:encrypted-datastore:1.0.0-alpha02")

    // Room persistence
    def room_version = '2.5.1'
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    // JC Dialogs
    def dialogs_version = "0.9.0"
    implementation "io.github.vanpra.compose-material-dialogs:core:$dialogs_version"

    // JC Settings
    implementation 'com.github.alorma:compose-settings-ui:0.27.0'

    // Paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation 'androidx.paging:paging-compose:1.0.0-alpha20'

    // Retrofit2 Networking
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'

    // JC Navigation
    def destination_version = '1.8.42-beta' // Latest compatible with JC 1.4.x
    implementation "io.github.raamcosta.compose-destinations:core:$destination_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$destination_version"

    // Android X/KTX
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha02'

    // Scalable layout units
    def scalable_units_version = '1.1.0'
    implementation "com.intuit.sdp:sdp-android:$scalable_units_version"
    implementation "com.intuit.ssp:ssp-android:$scalable_units_version"

    // Desugaring (Time-related features support for API 21+)
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    // Images with Coil by landscapist JC version
    def landscapist_version = '2.2.1'
    implementation "com.github.skydoves:landscapist-coil:$landscapist_version"
    implementation "com.github.skydoves:landscapist-animation:$landscapist_version"

    // Compose
    def composeVersion = '1.4.7'
    implementation "androidx.compose.runtime:runtime:$composeVersion"
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$composeVersion"
        // Integration with activities
        implementation 'androidx.activity:activity-compose:1.7.2'
        // Theme
        implementation 'com.google.android.material:compose-theme-adapter:1.2.1'
        // Compose Material Design
        implementation "androidx.compose.ui:ui-tooling:$composeVersion"
        implementation "androidx.compose.ui:ui-util:$composeVersion"
        implementation 'androidx.compose.material3:material3:1.2.0-alpha02'
        // Animations
        implementation "androidx.compose.animation:animation:$composeVersion"
        // Tooling support (Previews, etc.)
        implementation "androidx.compose.ui:ui-tooling:$composeVersion"
        // Integration with ViewModels
        implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
        // ViewPager
        def accompanist_version = '0.31.3-beta'
        implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
        implementation "com.google.accompanist:accompanist-adaptive:$accompanist_version"

    // Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        // Koin
        testImplementation "io.insert-koin:koin-test"
        testImplementation "io.insert-koin:koin-test-junit5"
        // JetpackCompose UI
        androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
}